import random
import os
import telebot
from dotenv import load_dotenv, dotenv_values

load_dotenv()

random_emojis_list = "üòáü§©üòçüòúü§Ø"
API_KEY = os.getenv("API_KEY")
bot = telebot.TeleBot(API_KEY)

options_list = ["–ê–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç—É", "–°—Ç—É–¥–µ–Ω—Ç—É", "–û–ü –ú–ú–§", "–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è", "–Ü–Ω—à–µ", "–î–∞—Ç–∏ –ø—Ä–∏–π–º–∞–ª—å–Ω–æ—ó –∫–æ–º—ñ—Å—ñ—ó", "–ü–µ—Ä–µ–ª—ñ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤—Å—Ç—É–ø—É", "–ü–µ—Ä–µ–ª—ñ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –ø–æ—Å–µ–ª–µ–Ω–Ω—è", "–ì–∞–π–¥ –ø–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—è–º", "–¢—Ä–∏—Ç–æ–Ω", "–ö–∞—Ñ–µ–¥—Ä–∏", "–ü–æ—à—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤", "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏", "–ü—Ä–µ–∑–∏–¥—ñ—è", "–Ø–∫ –¥–æ—î–¥–Ω–∞—Ç–∏—Å—è?", "–ú–∞—é —ñ–¥–µ—é!", "–¢–ì–ö –û–ü –ú–ú–§", "–¢–ì–ö –ú–ú–§", "–Ü–Ω—Å—Ç–∞ –ú–ú–§", "–§–µ–π—Å–±—É–∫ –ú–ú–§", "–°–∞–π—Ç —Å—Ç—É–¥–º—ñ—Å—Ç–∞", "–°–∞–π—Ç –ú–ú–§", "–ö–∞—Ä—Ç–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É", "–ö–∞—Ä—Ç–∞ –¥–æ —Å—Ç–æ–ª–æ–≤–∫–∏ –Ω–∞ —Ñ—Ä–µ–∫—Å—ñ üòé"]

def get_start_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–ê–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç—É"))
    markup.add(telebot.types.KeyboardButton("–°—Ç—É–¥–µ–Ω—Ç—É"))
    markup.add(telebot.types.KeyboardButton("–û–ü –ú–ú–§"))
    markup.add(telebot.types.KeyboardButton("–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è"))
    markup.add(telebot.types.KeyboardButton("–Ü–Ω—à–µ"))
    markup.add(telebot.types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç–∏ –º—î–º"))
    return markup

def get_abit_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–î–∞—Ç–∏ –ø—Ä–∏–π–º–∞–ª—å–Ω–æ—ó –∫–æ–º—ñ—Å—ñ—ó"))
    markup.add(telebot.types.KeyboardButton("–ü–µ—Ä–µ–ª—ñ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤—Å—Ç—É–ø—É"))
    markup.add(telebot.types.KeyboardButton("–ü–µ—Ä–µ–ª—ñ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –ø–æ—Å–µ–ª–µ–Ω–Ω—è"))
    markup.add(telebot.types.KeyboardButton("–ì–∞–π–¥ –ø–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—è–º"))
    markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup

def get_student_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–¢—Ä–∏—Ç–æ–Ω"))
    markup.add(telebot.types.KeyboardButton("–ö–∞—Ñ–µ–¥—Ä–∏"))
    markup.add(telebot.types.KeyboardButton("–ü–æ—à—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤"))
    markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup

def get_op_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏"))
    markup.add(telebot.types.KeyboardButton("–ü—Ä–µ–∑–∏–¥—ñ—è"))
    markup.add(telebot.types.KeyboardButton("–Ø–∫ –¥–æ—î–¥–Ω–∞—Ç–∏—Å—è?"))
    markup.add(telebot.types.KeyboardButton("–ú–∞—é —ñ–¥–µ—é!"))
    markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup

def get_links_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–°–∞–π—Ç –ú–ú–§"))
    markup.add(telebot.types.KeyboardButton("–°–∞–π—Ç —Å—Ç—É–¥–º—ñ—Å—Ç–∞"))
    markup.add(telebot.types.KeyboardButton("–§–µ–π—Å–±—É–∫ –ú–ú–§"))
    markup.add(telebot.types.KeyboardButton("–Ü–Ω—Å—Ç–∞ –ú–ú–§"))
    markup.add(telebot.types.KeyboardButton("–¢–ì–ö –ú–ú–§"))
    markup.add(telebot.types.KeyboardButton("–¢–ì–ö –û–ü –ú–ú–§"))
    markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup

def get_other_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–ö–∞—Ä—Ç–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É"))
    markup.add(telebot.types.KeyboardButton("–ö–∞—Ä—Ç–∞ –¥–æ —Å—Ç–æ–ª–æ–≤–∫–∏ –Ω–∞ —Ñ—Ä–µ–∫—Å—ñ üòé"))
    markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup

def get_back_markup():
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.reply_to(message,
                 f"–ü—Ä–∏–≤—ñ—Ç! –¶–µ –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ –∑ –º–µ—Ö–∞–Ω—ñ–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É –ö–ù–£ {random_emojis_list[random.randint(0, len(random_emojis_list) - 1)]}. –¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —ñ–¥–µ—é –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É.",
                 reply_markup=get_start_markup())
    
@bot.message_handler(func=lambda message: True)
def universal_message(message):
    try:
        print(message.text)
    except Exception as ex:
        print(f"{ex} happened...")
    if (message.text == "–ê–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç—É"):
        bot.send_message(message.chat.id, "–©–æ —Å–∞–º–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=get_abit_markup())
    elif (message.text == "–°—Ç—É–¥–µ–Ω—Ç—É"):
        bot.send_message(message.chat.id, "–©–æ —Å–∞–º–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=get_student_markup())
    elif (message.text == "–û–ü –ú–ú–§"):
        bot.send_message(message.chat.id, "–©–æ —Å–∞–º–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=get_op_markup())
    elif (message.text == "–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è"):
        bot.send_message(message.chat.id, "–©–æ —Å–∞–º–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=get_links_markup())
    elif (message.text == "–Ü–Ω—à–µ"):
        bot.send_message(message.chat.id, "–©–æ —Å–∞–º–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=get_other_markup())
    elif (message.text == "–ü–æ–∫–∞–∑–∞—Ç–∏ –º—î–º"):
        bot.send_photo(message.chat.id, photo=open('mem.jpg', 'rb'), reply_markup=get_start_markup())
    elif (message.text in options_list):
        bot.send_message(message.chat.id, "*–¶–µ–π —Ä–æ–∑–¥—ñ–ª –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ*", reply_markup=get_back_markup())
    elif (message.text == "–ù–∞–∑–∞–¥"):
        bot.send_message(message.chat.id,
                f"–ü—Ä–∏–≤—ñ—Ç! –¶–µ –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ –∑ –º–µ—Ö–∞–Ω—ñ–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É –ö–ù–£ {random_emojis_list[random.randint(0, len(random_emojis_list) - 1)]}. –¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —ñ–¥–µ—é –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É.",
                 reply_markup=get_start_markup())
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤ –í–∞—Å. –í–≤–µ–¥—ñ—Ç—å /start –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏.")

if __name__ == "__main__":
    bot.infinity_polling()
